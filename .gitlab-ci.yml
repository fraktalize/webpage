variables:
  GIT_STRATEGY: "clone"
  GIT_CHECKOUT: "true"
  GIT_DEPTH: "1"

build-php:
  cache:
    key: build-cache:composer
    paths:
      - vendor/
  image: jitesoft/composer:latest
  stage: build
  script:
    - composer install --prefer-source --no-interaction
  artifacts:
    paths:
      - vendor/
    expire_in: 2 hrs

build-js:
  cache:
    key: build-cache:node
    paths:
      - node_modules/
  image: jitesoft/gulp-bower:latest
  stage: build
  script:
    - npm install
    - gulp default
  artifacts:
    paths:
      - node_modules/
      - public/css/
      - public/js/
    expire_in: 2 hrs

test-php:
  image: jitesoft/composer:latest
  stage: test
  dependencies:
    - build-php
  script:
    - vendor/bin/phpcs -p --report=summary --standard=ruleset.xml app
    - vendor/bin/phpunit --configuration phpunit.xml --colors=never

test-js:
  image: jitesoft/gulp-bower:latest
  stage: test
  dependencies:
    - build-js
  script:
    - npm test


deploy:
  stage: deploy
  image: alpine
  dependencies:
    - build-php
    - build-js
  before_script:
    - apk add -no-cache openssh-client tar
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - echo "$SERVER_KEY" > ~/.ssh/known_hosts
  script:
    - echo "$ENV_FILE" > .env
    - cd ../ && tar -zcf web.tar.gz -X ./web/.tarignore web && cd web
    - scp web.tar.gz ${DEPLOY_USER}@jitesoft.com:/services/web/
    - ssh ${DEPLOY_USER}@jitesoft.com 'tar -xzf /services/web/web.tar.gz -C /services/web/source --strip-components=1 && rm /services/web/web.tar.gz'
  environment:
    name: Production
  only:
    - master
